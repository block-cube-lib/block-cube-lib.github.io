<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unity on blockの巣</title>
    <link>https://block-cube-lib.github.io/tags/unity/</link>
    <description>Recent content in Unity on blockの巣</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 09 Jan 2020 19:07:00 +0900</lastBuildDate>
    
	<atom:link href="https://block-cube-lib.github.io/tags/unity/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cameraに設定されたRendererをスクリプトから変更する</title>
      <link>https://block-cube-lib.github.io/posts/unity-change-camera-renderer-from-script/</link>
      <pubDate>Thu, 09 Jan 2020 19:07:00 +0900</pubDate>
      
      <guid>https://block-cube-lib.github.io/posts/unity-change-camera-renderer-from-script/</guid>
      <description>確認したUnityのバージョン
2019.3.0f1(β版)
UniversalRPからカメラにRendererを設定できるようになりました。
しかしCameraクラスにはRendererを設定するような項目はありません。
ではどうやってRendererを変更するのかというと
UniversalAdditionalCameraData.SetRendererという関数を使用します。
実はUniversalRPではCameraを追加すると一緒にUniversalAdditionalCameraDataというコンポーネントがついてきます。
この中にSetRendererという関数があるので、その関数を使用することでScriptからRendererを変更できます。
// UniversalAdditionalCameraDataを使用するには // using UnityEngine.Rendering.Universal;が必要 var cameraData = camera.GetComponent&amp;lt;UniversalAdditionalCameraData&amp;gt;(); cameraData.SetRenderer(rendererIndex); // Rendererのindexを指定する  SetRendererの引数はRendererのindexです。
手元で試したところ
 0 &amp;lt;= index &amp;amp;&amp;amp; index &amp;lt; 登録されているRendererの数-1
正常に設定される 登録されているRendererの数 &amp;lt;= index
警告が出され続ける(その間デフォルトのRendererが使われる) index == -1
デフォルトが設定される index &amp;lt;= -2
例外が発生  が確認できました</description>
    </item>
    
    <item>
      <title>Unity×KYOTO Vol.0で発表しました</title>
      <link>https://block-cube-lib.github.io/posts/unity-kyoto-0/</link>
      <pubDate>Tue, 24 Dec 2019 18:30:00 +0900</pubDate>
      
      <guid>https://block-cube-lib.github.io/posts/unity-kyoto-0/</guid>
      <description>2019/12/19に京都で行われたUnity×KYOTO Vol.0で 「Universal Render Pipelineでポストプロセス」というタイトルで発表しました。
スライドは既に公開されています。
発表の様子 こういう場で発表するのは人生初なので緊張しましたが、主観では特に失敗なく終われたと思っています。
後の自分のためにも経緯とか準備の話とか書いていきます。
発表者決定まで Ponosから発表者が出るまでの経緯や自分が所属しているスタジオに声がかかった経緯は詳しくは知らないので省略します。
スタジオ内のUnityエンジニアに「発表したい人いたら立候補して」みたいな連絡があったので、それはそれは悩んで立候補しました。
自分が発表するって決まったときは緊張で手汗がすごかったです。発表するって決まっただけなのに。
あと50分枠1人では無理だと思ったこともありエンジニアのリーダーと僕で25分ずつで分けることにしました。ありがとうリーダー。
これが11/19なので発表の1月前です。
発表準備 テーマ(タイトル)決定まで イベントやるよって情報を公開するために何を発表するかを公開する必要があります。
つまりタイトルくらいは先に決めておく必要があるわけです。
しかし自分が持ってる情報で他の人が興味を持つものが思いつきませんでした。 そのため
 まず間違いなくDOTSを目的に来る人がいる
→それなら新しい機能のほうが興味を引けるはず 見た目でわかりやすいものが良さそう Shader Graph使いたい  などからUniversal Render Pipelineで何かしらやる。いけそうならポストプロセスって感じで決めました。 このときが11/22です。既に3日経過。
PostProcessing Stack V3でカスタムエフェクトの追加ができないと気づくまで Universal Render Pipeline(URP)がLightweight Render Pipeline(LWRP)の後継的なポジションなのは知っていましたが、 それ以外は全くわかってないので調べつつ作ってました。
PostProcessing Stackの存在を知った時点で
「ちょこっとコード書いたら後はShader Graphで遊んでるくらいでどうにかなるやろ」
などと考えてました。なりませんでした。
発表内容にあるように、PostProcessing Stack V3でカスタムエフェクトが追加できなかったからです。
Unity Blogの 軽量レンダーパイプラインからユニバーサルレンダーパイプラインへに
 ただし、現在ポストプロセッシングはカスタムエフェクトに対応していません（今後追加される予定です）。
 と書いてあるのを見逃しており、PostProcessing Stack V3にカスタムエフェクトを追加できないかと調べていました。
最終的にUniversal Render Pipelineのコードを読んで「あれ？これ無理じゃね？」って気づいたあたりで先程の記事を読み直し無理だと知りました。
最初からよく読んでいればこんなに時間はかからなかったのに…
この時点でポストプロセスのネタのままいけるか不安になってました。 多分ここらへんで11月終わりそうになってました。
RenderObjectsを使うと決めるまで Unity-Technologies/UniversalRenderingExamples を見て、RendererFeatureを自作すればかなり自由にいろいろできることが判明したのですが、
 コードの解説ばかりになりそうなので聞く人が面白くないかもしれない SceneColorノードでレンダリング結果を取得できる 本番まで準備期間が少ない  などからRenderObjectsを使用しコードを書かなくても良い、コードの解説も不要な内容にしました。</description>
    </item>
    
    <item>
      <title>Unite Tokyo 2019 Day1に参加しました</title>
      <link>https://block-cube-lib.github.io/posts/unite2019/</link>
      <pubDate>Wed, 25 Sep 2019 22:01:00 +0900</pubDate>
      
      <guid>https://block-cube-lib.github.io/posts/unite2019/</guid>
      <description>Unity2019に参加しました 仕事が終わらなかったので2日間あるうちのの初日だけの参加になりました。
懇親会も1時間ほど参加してました。
この記事は帰りの新幹線で書いてます。
ブースとか講演個別の感想は明日以降に書くかもしれません。
講演 聞いた講演は
 現実とデジタルを融合する『HoloLens 2』と『Azure Spatial Anchors』解説 たのしいDOTS〜初級から上級まで〜 Unity 2019での新アニメーション・リギング 大量のオブジェクトを含む広いステージでも大丈夫、そうDOTSならね 基調講演  どれも面白かったです。
特にDOTS関係はこれからのUnityでの開発に大きく関わることだと思うので 講演資料か講演動画を見たほうが良いです。見ましょう。
同時翻訳の質はとても良かったです。
基調講演の前からお酒が提供され始めて飲みながら講演を聞けた。
すでにパーティ感があって楽しかった。
飲食物の感想 美味しい飲食物がたくさんあったので感想
ホットドッグ
パンにUnityのロゴが焼印されたホットドッグ。美味しかった。
りんご
皮付きの切ってあるりんご。美味しかった。
バナナ
一本まるごとのバナナ。甘くて美味しかった。
ドーナツ
美味しかった。
マドレーヌ
美味しかった。
懇親会の料理
色々あった。どれも美味しかった。
懇親会のデザート
ドラゴンフルーツがあったのが嬉しかった。
ぶどうゼリーに金箔がのってて豪華。
全部見た目がおしゃれ。
美味しかった。
コーヒー
熱めのコーヒー。舌やけどした。美味しかった。
お酒
種類多くて嬉しかった。美味しかった。
来年以降の自分に向けて 変わった形の椅子はやめておけ。
今年のRoom Aのそばのサテライトスペースのような椅子はやめておいたほうが良い。
ケツと腰が痛い。
サテライトでセッションを見るならサテライトルームへ行ったほうが良い。
周りの話し声とか気になる。
Uniteの内容と関係ない感想 京都から日帰りでの参加なので
6時半ごろに家を出て0時過ぎに家につく(予定)というハードなスケジュール。
辛い。
初日の朝はどうにもならないかもしれないが、 次はもっとゆとりのあるスケジュールが良い。</description>
    </item>
    
  </channel>
</rss>